{
    "openapi": "3.0.0",
    "info": {
        "title": "App Name API Documentation",
        "description": "\nThis API blueprint is subject to change due to technology restrictions, performance optimizations or changing requirements.\n\n## Environments\nOur Production API is located at:\n\n```\nhttp://laravel-project-template.test\n```\n\nOur Staging API is located at:\n```\nhttp://staging-laravel-project-template.test\n```\n\n## Versioning\nThis API uses versioning as identified in the URI. Newer versions MAY introduce breaking changes.\n\n`/api/v1/users`\n\n## HTTP Methods\nThis API uses HTTP verbs (methods) as following:\n\n- `GET` - *Read* - used to **read** (or retrieve) a representation of a resource,\n- `POST` - *Create* - used to **create** new resources.\n- `PUT` - *Update* - used to **update** an existing resource identified by a URI.\n- `DELETE` - *Delete* - used to **delete** a resource identified by a URI.\n\n## Media Type\nWhere applicable this API MUST use the `JSON` media-type. Requests with a message-body are using plain `JSON` to set or update resource states.\n\n`Content-type: application/json` and `Accept: application/json headers` SHOULD be set on all requests if not stated otherwise.\n\n## Notational Conventions\nThe key words `MUST`, `MUST NOT`, `REQUIRED`, `SHALL`, `SHALL NOT`, `SHOULD`, `SHOULD NOT`, `RECOMMENDED`, `MAY`, and `OPTIONAL` in this document are to be interpreted as described in [RFC2119](https://www.ietf.org/rfc/rfc2119).\n\n## Resource IDs\nThis API uses short non-sequential url-friendly unique ids. Every resource id `MUST` consists of 6 url-friendly characters: `A-Z` and `0-9`.\n\nResource Ids `MUST` be `UPPERCASE`. Resource Ids are still `CASE SENSITIVE` but should no longer cause duplicate key issues in databases with case insensitive collations.\n\n```\nExample: A84LNOE\n```\n\n## Representation of Date and Time\nAll exchange of date and time-related data `MUST` be done according to `ISO 8601` standard and stored in UTC.\n\nWhen returning date and time-related data `YYYY-MM-DDThh:mm:ss.SSSZ` format `MUST` be used.\n\n## Status Codes and Errors\nThis API uses HTTP status codes to communicate with the API consumer.\n\n- `200 OK` - Response to a successful GET, PUT, PATCH or DELETE.\n- `201 Created` - Response to a POST that results in a creation.\n- `202 Accepted` - Response to a request if an actioned will be queued for offline processing.\n- `204 No Content` - Response to a successful request that won't be returning a body (like a DELETE request).\n- `400 Bad Request` - Malformed request; form validation errors.\n- `401 Unauthorized` - When no or invalid authentication details are provided.\n- `403 Forbidden` - When authentication succeeded but authenticated user doesn't have access to the resource.\n- `404 Not Found` - When a non-existent resource is requested.\n- `405 Method Not Allowed` - Method not allowed.\n- `406 Not Acceptable` - Could not satisfy the request.\n- `415 Unsupported Media Type` - Unsupported media type in request.\n- `422 Validation failed` - Supplied data did not pass validation.\n- `500 Internal server error` - An uncaught exception occurred.\n- `502 Bad Gateway` - An error occurred in downstream service.\n\n * ",
        "version": "1.0.0",
        "x-logo": {
            "url": "http://laravel-project-template.test/logo.png",
            "backgroundColor": "#FFFFFF",
            "altText": "LDE"
        }
    },
    "servers": [
        {
            "url": "http://laravel-project-template.test",
            "description": "Production Server"
        },
        {
            "url": "http://laravel-project-template.test",
            "description": "Staging Server"
        },
        {
            "url": "http://laravel-project-template.test/api/v1"
        }
    ],
    "paths": {
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Logout"
                ],
                "summary": "Logs out current user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Sucessfull Logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Successfully logged out"
                                        },
                                        "data": {
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response4xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/me": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get name of logged in user",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "Successfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Username retreived successfully"
                                        },
                                        "data": {
                                            "example": {
                                                "user_name": "Asia Walter"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response4xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/groups": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "This API returns groups in which user has",
                "operationId": "group",
                "responses": {
                    "200": {
                        "description": "Group retrived successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Group retrived successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "groups": {
                                                    "items": {
                                                        "type": "string",
                                                        "example": "admin"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response4xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/candidacies": {
            "get": {
                "tags": [
                    "Candidacy"
                ],
                "summary": "Get list of candidacies.",
                "description": "Returns list of candidacies.",
                "operationId": "getAllCandidaciesData",
                "parameters": [
                    {
                        "name": "final_status",
                        "in": "path",
                        "description": "final_status of candidacy",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "active"
                        }
                    },
                    {
                        "name": "candidate_name",
                        "in": "path",
                        "description": "name of candidate",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Rajiv Gandhi"
                        }
                    },
                    {
                        "name": "position",
                        "in": "path",
                        "description": "position of role",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Software Engineer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Candidacies retreived successfully"
                                        },
                                        "data": {
                                            "description": "Array of data of all candidacies",
                                            "properties": {
                                                "candidacies": {
                                                    "description": "get list of all candidacie",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Candidacy"
                                                    }
                                                },
                                                "meta": {
                                                    "$ref": "#/components/schemas/paginationMeta"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Candidacy"
                ],
                "summary": "Creates a new candidacy",
                "description": "Returns key of candidacy",
                "operationId": "createNewCandidacy",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "$ref": "#/components/schemas/Candidate/properties/name"
                                    },
                                    "email": {
                                        "$ref": "#/components/schemas/Candidate/properties/email"
                                    },
                                    "position": {
                                        "$ref": "#/components/schemas/Candidacy/properties/position"
                                    },
                                    "metadata": {
                                        "$ref": "#/components/schemas/Candidate/properties/metadata"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sucessfull Creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Candidacy initiated successfully"
                                        },
                                        "data": {
                                            "description": "data of candidacy",
                                            "properties": {
                                                "candidacy_key": {
                                                    "description": "candidacy key to access it",
                                                    "type": "string",
                                                    "example": "UzMOt5LIEvzkfFSh"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/candidacies/{candidacy}": {
            "get": {
                "tags": [
                    "Candidacy"
                ],
                "summary": "Get data of one candidacy.",
                "description": "Returns one candidacy.",
                "operationId": "getOneCandidacyData",
                "parameters": [
                    {
                        "name": "candidacy",
                        "in": "path",
                        "description": "Candidacy key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Candidacy retreived successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Candidacy"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/candidacies/{candidacy}/closeStage": {
            "post": {
                "tags": [
                    "StageAssignment"
                ],
                "summary": "Closes stage of candidacy",
                "description": "Returns success response if stage closed",
                "operationId": "closeStageOfCandidacy",
                "parameters": [
                    {
                        "name": "candidacy",
                        "in": "path",
                        "description": "Key of Candidacy",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stage_name": {
                                        "$ref": "#/components/schemas/CandidacyHistory/properties/stage_name"
                                    },
                                    "stage_closing_reason": {
                                        "description": "API for closing stage",
                                        "type": "string",
                                        "example": "Completed the stage"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Closing Successfull",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Stage closed successfully."
                                        },
                                        "data": {
                                            "description": "API for closing stage",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/candidacy_histories/{candidacy}": {
            "get": {
                "tags": [
                    "CandidacyHistory"
                ],
                "summary": "Get All histories data of a candidacy",
                "description": "Returns all history data of a candidacy",
                "operationId": "getListOfHistoriesForACandidacy",
                "parameters": [
                    {
                        "name": "candidacy",
                        "in": "path",
                        "description": "Candidacy key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Histories retrieved successfully"
                                        },
                                        "data": {
                                            "description": "Array of data of Histories",
                                            "properties": {
                                                "histories": {
                                                    "description": "Get histories of a candidacy",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/key"
                                                            },
                                                            "actor": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/actor"
                                                            },
                                                            "stage_name": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/stage_name"
                                                            },
                                                            "status": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/status"
                                                            },
                                                            "metadata": {
                                                                "description": "Get histories of a candidacy",
                                                                "type": "object",
                                                                "example": {
                                                                    "duration": "2hour",
                                                                    "interviewDate": "2021-03-24"
                                                                }
                                                            },
                                                            "created_at": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/created_at"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/candidates": {
            "get": {
                "tags": [
                    "Candidate"
                ],
                "summary": "Get list of candidates",
                "description": "Returns list of candidates",
                "operationId": "getCandidatesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Data retrieved successfully."
                                        },
                                        "data": {
                                            "description": "Array of data of all candidates",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Candidate"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/candidates/{candidate}": {
            "get": {
                "tags": [
                    "Candidate"
                ],
                "summary": "Get candidate infromation",
                "description": "Returns candidate data",
                "operationId": "getCandidateById",
                "parameters": [
                    {
                        "name": "candidate",
                        "in": "path",
                        "description": "Candidate key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Fetch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Data retrieved successfully."
                                        },
                                        "data": {
                                            "description": "Array of data of required candidate.",
                                            "properties": {
                                                "candidate": {
                                                    "$ref": "#/components/schemas/Candidate"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Candidate"
                ],
                "summary": "Update existing Candidate",
                "description": "Updates candidate and returns updated data",
                "operationId": "updateCandidate",
                "parameters": [
                    {
                        "name": "candidate",
                        "in": "path",
                        "description": "Candidate key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "$ref": "#/components/schemas/Candidate/properties/name"
                                    },
                                    "email": {
                                        "$ref": "#/components/schemas/Candidate/properties/email"
                                    },
                                    "metadata": {
                                        "$ref": "#/components/schemas/Candidate/properties/metadata"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Updation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Candidate data updated successfully."
                                        },
                                        "data": {
                                            "description": "Array of data of updated candidate.",
                                            "properties": {
                                                "candidate": {
                                                    "$ref": "#/components/schemas/Candidate"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Candidate"
                ],
                "summary": "Delete existing Candidate",
                "description": "Deletes a candidate",
                "operationId": "deleteCandidate",
                "parameters": [
                    {
                        "name": "candidate",
                        "in": "path",
                        "description": "Candidate key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Candidate deleted successfully."
                                        },
                                        "data": {
                                            "description": "Array of data of deleted candidate",
                                            "properties": {
                                                "candidate": {
                                                    "$ref": "#/components/schemas/Candidate"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/candidates": {
            "post": {
                "tags": [
                    "Candidate"
                ],
                "summary": "Store a new candidate",
                "description": "Creates a new candidate and returns that candidate's data",
                "operationId": "storeCandidate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "$ref": "#/components/schemas/Candidate/properties/name"
                                    },
                                    "email": {
                                        "$ref": "#/components/schemas/Candidate/properties/email"
                                    },
                                    "metadata": {
                                        "$ref": "#/components/schemas/Candidate/properties/metadata"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Record created successfully."
                                        },
                                        "data": {
                                            "description": "Array of data of created candidate",
                                            "properties": {
                                                "candidate": {
                                                    "$ref": "#/components/schemas/Candidate"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/coding-challenges?page=1": {
            "get": {
                "tags": [
                    "CodingChallenge"
                ],
                "summary": "Get list of conding challenges",
                "description": "Returns list of coding challenges",
                "operationId": "getCodingChallenges",
                "responses": {
                    "201": {
                        "description": "Successfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Coding challenges retrieved successfully"
                                        },
                                        "data": {
                                            "description": "All coding challenges array",
                                            "properties": {
                                                "challenges": {
                                                    "items": {
                                                        "$ref": "#/components/schemas/CodingChallengeSchema"
                                                    }
                                                },
                                                "meta": {
                                                    "$ref": "#/components/schemas/paginationMeta"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/coding-challenges/": {
            "post": {
                "tags": [
                    "CodingChallenge"
                ],
                "summary": "Creates a new coding chellenge",
                "description": "Returns key with coding challenge id",
                "operationId": "createCodingChallenge",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Coding challenge title",
                                        "type": "string",
                                        "example": "Two number sum"
                                    },
                                    "description": {
                                        "description": "Coding challenge description",
                                        "type": "string",
                                        "example": "Write a program that example.."
                                    },
                                    "tests": {
                                        "description": "Standard inputs (STDIN), Standard output (STDOUT) string that we expect program should return.",
                                        "items": {
                                            "properties": {
                                                "inputs": {
                                                    "description": "STDIN inputs ",
                                                    "example": "2, 3"
                                                },
                                                "output": {
                                                    "description": "STDOUT string",
                                                    "example": "5"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Challenge created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Operation message",
                                            "type": "string",
                                            "example": "Challenge created"
                                        },
                                        "data": {
                                            "description": "Coding challenge id",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "example": "0UhDnbxtsLxP47hm"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response4xx"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/coding-challenges/{codingChallenge}/": {
            "get": {
                "tags": [
                    "CodingChallenge"
                ],
                "summary": "Get a coding challenge data",
                "description": "Returns coding challenges infomation",
                "operationId": "getCodingChallenge",
                "parameters": [
                    {
                        "name": "codingChallenge",
                        "in": "path",
                        "description": "Coding challenge key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "coding Challenge retrived successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CodingChallengeDetailed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CodingChallenge"
                ],
                "summary": "Delete a conding challenge",
                "description": "Delete a conding challenge (soft delete)",
                "operationId": "deleteCodingChallenge",
                "parameters": [
                    {
                        "name": "codingChallenge",
                        "in": "path",
                        "description": "Coding challenge key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Challenge updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Operation message",
                                            "type": "string",
                                            "example": "Challenge deleted"
                                        },
                                        "data": {
                                            "description": "Operation data (empty)",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/coding-challenges/{codingchallenge}": {
            "put": {
                "tags": [
                    "CodingChallenge"
                ],
                "summary": "Update the whole challenge (all fields)",
                "description": "Required all fields to Update the whole challenge",
                "operationId": "updateCodingChallenge",
                "parameters": [
                    {
                        "name": "coding challenge",
                        "in": "path",
                        "description": "challenge key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Coding challenge title",
                                        "type": "string",
                                        "example": "Two number sum"
                                    },
                                    "description": {
                                        "description": "Coding challenge description",
                                        "type": "string",
                                        "example": "Write a program that example.."
                                    },
                                    "tests": {
                                        "description": "STDIN supply using array, STDOUT has string",
                                        "items": {
                                            "properties": {
                                                "inputs": {
                                                    "description": "STDIN inputs ",
                                                    "example": "5, 3"
                                                },
                                                "output": {
                                                    "description": "STDOUT string",
                                                    "example": "8"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Challenge updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Challenge status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Challenge message",
                                            "type": "string",
                                            "example": "Challenge updated"
                                        },
                                        "data": {
                                            "description": "Challenge key",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "example": "0UhDnbxtsLxP47hm"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "CodingChallenge"
                ],
                "summary": "Update a coding challenge (all fields or specified fields)",
                "description": "Updates specified fields of the challenge",
                "operationId": "patchCodingChallenge",
                "parameters": [
                    {
                        "name": "coding challenge",
                        "in": "path",
                        "description": "challenge key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Challenge title",
                                        "type": "string",
                                        "example": "Two number sum"
                                    },
                                    "description": {
                                        "description": "Challenge description",
                                        "type": "string",
                                        "example": "Write a program that example.."
                                    },
                                    "tests": {
                                        "description": "STDIN supply using array, STDOUT has string",
                                        "items": {
                                            "properties": {
                                                "inputs": {
                                                    "description": "STDIN inputs ",
                                                    "example": "2, 3"
                                                },
                                                "output": {
                                                    "description": "STDOUT string",
                                                    "example": "5"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Challenge updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Challenge status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "description": "Challenge message",
                                            "type": "string",
                                            "example": "Challenge updated"
                                        },
                                        "data": {
                                            "description": "Challenge key",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "example": "0UhDnbxtsLxP47hm"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/coding-sessions/fetch-session/?session_id=ID&start=true": {
            "post": {
                "tags": [
                    "CodingSessions"
                ],
                "summary": "Fetch session or start session",
                "description": "This API fetch coding session by session_id and start the session if start query params supplied",
                "operationId": "fetchCodingSession",
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Session fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "session_id": {
                                            "description": "Session id",
                                            "type": "string",
                                            "example": "ID"
                                        },
                                        "is_valid": {
                                            "description": "Return true if session is valid (session entry found in session table).",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_started": {
                                            "description": "Return true if session is started.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_submitted": {
                                            "description": "Return true if session is submitted.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_expire": {
                                            "description": "Return true if session is expired.",
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "description": "Coding session data - Coding challenge",
                                            "items": {
                                                "properties": {
                                                    "title": {
                                                        "description": "Problem title",
                                                        "example": "Two number sum"
                                                    },
                                                    "description": {
                                                        "description": "Problem description",
                                                        "example": "# Description in markdown"
                                                    },
                                                    "inputs": {
                                                        "description": "Problem inputs",
                                                        "example": "Problem inputs"
                                                    },
                                                    "output": {
                                                        "description": "Problem output",
                                                        "example": "Problem output"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "playgrund": {
                                            "description": "Last saved code and languages",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "description": "Last written code, and empty if newly created",
                                                        "example": "function problem() {}"
                                                    },
                                                    "language": {
                                                        "description": "Last saved language",
                                                        "example": "javascript"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response4xx"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/coding-sessions/run/?session_id=ID": {
            "post": {
                "tags": [
                    "CodingSessions"
                ],
                "summary": "Run the code",
                "description": "This API run the code and save code in session",
                "operationId": "runCodingSession",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "Code that we want to run",
                                        "type": "string",
                                        "example": "function problem() {}"
                                    },
                                    "language": {
                                        "description": "language of code we want to run",
                                        "type": "string",
                                        "example": "javascript"
                                    },
                                    "inputs": {
                                        "description": "STDIN",
                                        "type": "string",
                                        "example": "hello"
                                    },
                                    "output": {
                                        "description": "Program output should be ...",
                                        "type": "string",
                                        "example": "hello"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code Runned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "session_id": {
                                            "description": "Session id",
                                            "type": "string",
                                            "example": "ID"
                                        },
                                        "is_valid": {
                                            "description": "Return true if session is valid (session entry found in session table).",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_started": {
                                            "description": "Return true if session is started.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_submitted": {
                                            "description": "Return true if session is submitted.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_expired": {
                                            "description": "Return true if session is expired.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "description": "Coding session data - Coding challenge",
                                            "properties": {
                                                "rce": {
                                                    "description": "rce data",
                                                    "properties": {
                                                        "matches": {
                                                            "description": "If program output matches with STDOUT",
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "actual": {
                                                            "description": "Program return STDOUT",
                                                            "example": "Hello"
                                                        },
                                                        "expected": {
                                                            "description": "Program STDOUT should be this.",
                                                            "example": "Cool"
                                                        },
                                                        "hasError": {
                                                            "description": "Program return errors",
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "errorMessage": {
                                                            "description": "Error description",
                                                            "example": "Error description"
                                                        },
                                                        "message": {
                                                            "description": "Message program should be and return this",
                                                            "example": "expected cool but received hello"
                                                        },
                                                        "outOfResources": {
                                                            "description": "Program has runs more than 4s",
                                                            "type": "boolean",
                                                            "example": false
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/coding-sessions/submit/?session_id=ID": {
            "post": {
                "tags": [
                    "CodingSessions"
                ],
                "summary": "Submit coding session and save code to coding session",
                "description": "This API fetch coding session by session_id and start the session if start query params supplied",
                "operationId": "submitCodingSession",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "Code that we want to run",
                                        "type": "string",
                                        "example": "function problem() {}"
                                    },
                                    "language": {
                                        "description": "language of code we want to run",
                                        "type": "string",
                                        "example": "javascript"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session submitted!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Operation status",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "session_id": {
                                            "description": "Session id",
                                            "type": "string",
                                            "example": "ID"
                                        },
                                        "is_valid": {
                                            "description": "Return true if session is valid (session entry found in session table).",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_started": {
                                            "description": "Return true if session is started.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_submitted": {
                                            "description": "Return true if session is submitted.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_expire": {
                                            "description": "Return true if session is expired.",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "description": "Coding session data - Coding challenge",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response4xx"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/coding-submissions/{codingSubmission}/": {
            "get": {
                "tags": [
                    "CodingSubmission"
                ],
                "summary": "Get a coding submission data",
                "description": "Returns coding submission infomation",
                "operationId": "getCodingSubmission",
                "parameters": [
                    {
                        "name": "codingSubmission",
                        "in": "path",
                        "description": "Coding submission key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "coding submission retrived successfully"
                                        },
                                        "data": {
                                            "description": "coding submission data",
                                            "properties": {
                                                "challenge": {
                                                    "description": "Return challenge",
                                                    "properties": {
                                                        "title": {
                                                            "description": "Problem title",
                                                            "example": "Two number sum"
                                                        },
                                                        "description": {
                                                            "description": "Problem description",
                                                            "example": "# Description in markdown"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "candidate": {
                                                    "description": "Return candidate information",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Candiate name",
                                                            "example": "John"
                                                        },
                                                        "key": {
                                                            "description": "Candiate key",
                                                            "example": "AABBCC"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "code": {
                                                    "description": "coding related data",
                                                    "properties": {
                                                        "code": {
                                                            "description": "user submitted code",
                                                            "example": "function problem() {}"
                                                        },
                                                        "language": {
                                                            "description": "coding language",
                                                            "example": "javascript"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "tests": {
                                                    "description": "test cases",
                                                    "properties": {
                                                        "total_tests": {
                                                            "description": "total test cases in problem",
                                                            "example": "5"
                                                        },
                                                        "passed_tests": {
                                                            "description": "total passed tests",
                                                            "example": "4"
                                                        },
                                                        "result": {
                                                            "description": "tested test case",
                                                            "properties": {
                                                                "crawled": {
                                                                    "description": "Return true if, all test cases are perform against submitted code",
                                                                    "type": "boolean",
                                                                    "example": true
                                                                },
                                                                "last_result_crawled": {
                                                                    "description": "Not necessary",
                                                                    "type": "string",
                                                                    "example": 4
                                                                },
                                                                "results": {
                                                                    "description": "result test case",
                                                                    "items": {
                                                                        "properties": {
                                                                            "matches": {
                                                                                "description": "If program output matches with STDOUT",
                                                                                "type": "boolean",
                                                                                "example": true
                                                                            },
                                                                            "actual": {
                                                                                "description": "Program return STDOUT",
                                                                                "example": "Hello"
                                                                            },
                                                                            "expected": {
                                                                                "description": "Program STDOUT should be this.",
                                                                                "example": "Cool"
                                                                            },
                                                                            "hasError": {
                                                                                "description": "Program return errors",
                                                                                "type": "boolean",
                                                                                "example": true
                                                                            },
                                                                            "errorMessage": {
                                                                                "description": "Error description",
                                                                                "example": "Error description"
                                                                            },
                                                                            "message": {
                                                                                "description": "Message program should be and return this",
                                                                                "example": "expected cool but received hello"
                                                                            },
                                                                            "outOfResources": {
                                                                                "description": "Program has runs more than 4s",
                                                                                "type": "boolean",
                                                                                "example": false
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/feedback": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get list of Feedback",
                "description": "Returns list of Feedback",
                "operationId": "getFeedbackList",
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "data retrived successfully",
                                            "type": "string",
                                            "example": "data retrived successfully"
                                        },
                                        "data": {
                                            "description": "collection of array",
                                            "items": {
                                                "$ref": "#/components/schemas/Feedback"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found "
                    }
                }
            }
        },
        "/api/v1/feedback/{feedback}": {
            "get": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Get information of Feedback",
                "description": " information of Feedback",
                "operationId": "getFeedbackByKey",
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "data retrived successfully",
                                            "type": "string",
                                            "example": "data retrived successfully"
                                        },
                                        "data": {
                                            "description": "collection of array",
                                            "items": {
                                                "$ref": "#/components/schemas/Feedback"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found "
                    }
                }
            },
            "put": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Update existing Feedback",
                "description": "Returns updated feedback data",
                "operationId": "updateFeedback",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Feedback key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "data updated successfully",
                                            "type": "string",
                                            "example": "data updated successfully"
                                        },
                                        "data": {
                                            "description": "collection of array",
                                            "items": {
                                                "$ref": "#/components/schemas/Feedback"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unproccessable Entity"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Delete existing Feedback",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteFeedback",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "Feedback key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/v1/candidacies/{candidacy}/feedback": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Store new Feedback",
                "description": "Create New Feedback",
                "operationId": "storeFeedback",
                "parameters": [
                    {
                        "name": "candidacy",
                        "in": "path",
                        "description": "Key of Candidacy",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "verdict": {
                                        "type": "string",
                                        "example": "yes"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "He was good at communication skill and technical concepts were clear."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "data created successfully",
                                            "type": "string",
                                            "example": "Feedback Created Successfully"
                                        },
                                        "data": {
                                            "description": "Use to indentify record insted of id,  Mustbe in 6 latters",
                                            "type": "string",
                                            "example": "xYsw03"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/questionnaires": {
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Get list of questionnaires.",
                "description": "Returns list of questionnaires.",
                "operationId": "getAllQuestionnaires",
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "questionnaires retreived successfully"
                                        },
                                        "data": {
                                            "description": "Array of data of all questionnaires",
                                            "items": {
                                                "$ref": "#/components/schemas/Questionnaire"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Add new Questionnaire ",
                "description": "Add a new Questionnaire data",
                "operationId": "addQuestionnaire",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "$ref": "#/components/schemas/Questionnaire/properties/name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Questionnaire created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows status of operation",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows message for operation status ",
                                            "type": "string",
                                            "default": "Questionnaire created successfully."
                                        },
                                        "data": {
                                            "description": "Array of data for requested Questionnaire",
                                            "items": {
                                                "$ref": "#/components/schemas/Questionnaire"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/questionnaires/{questionnaire}": {
            "get": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Get a Questionnaire by key",
                "description": "returns Questionnaire data",
                "operationId": "getQuestionnaire",
                "parameters": [
                    {
                        "name": "questionnaire",
                        "in": "path",
                        "description": "Questionnaire key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questionnaire retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of operation",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Message for status of operation",
                                            "default": "Questionnaire retrieved successfully."
                                        },
                                        "data": {
                                            "description": "Array of data for requested questionnaire",
                                            "items": {
                                                "$ref": "#/components/schemas/Questionnaire"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Updates existing Questionnaire",
                "description": "Updates existing questionnaire record and returns updated questionnaire data",
                "operationId": "updateQuestionnaire",
                "parameters": [
                    {
                        "name": "questionnaire",
                        "in": "path",
                        "description": "Questionnaire Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "$ref": "#/components/schemas/Questionnaire/properties/name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Questionnaire updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows status of operation",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows message for operation status ",
                                            "type": "string",
                                            "default": "Questionnaire updated successfully."
                                        },
                                        "data": {
                                            "description": "Array of data for requested Questionnaire",
                                            "items": {
                                                "$ref": "#/components/schemas/Questionnaire"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Deletes existing questionnaire",
                "description": "Deletes existing questionnaire",
                "operationId": "deleteQuestionnaire",
                "parameters": [
                    {
                        "name": "questionnaire",
                        "in": "path",
                        "description": "Key of Questionnaire",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questionnaire deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of operation",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Message for status of operation",
                                            "default": "Questionnaire deleted successfully."
                                        },
                                        "data": {
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/questionnaire_submissions/{questionnaire_submission}": {
            "get": {
                "tags": [
                    "QuestionnaireSubmission"
                ],
                "summary": "Get data of one QuestionnaireSubmission.",
                "description": "Returns one QuestionnaireSubmission.",
                "operationId": "getOneQuestionnaireSubmissionData",
                "parameters": [
                    {
                        "name": "questionnaire_submission",
                        "in": "path",
                        "description": "QuestionnaireSubmission key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Questionnaire Submission retrieved succesfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/QuestionnaireSubmission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response4xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/questionnaire_submissions/{questionnaire}": {
            "post": {
                "tags": [
                    "QuestionnaireSubmission"
                ],
                "summary": "Inserts data of questionnaire submission to database",
                "operationId": "storeQuestionnaireSubmission",
                "parameters": [
                    {
                        "name": "questionnaire",
                        "in": "path",
                        "description": "Key of questionnaire",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email of candidate",
                                        "example": "haresh@gmail.com"
                                    },
                                    "data": {
                                        "description": "Array of question-answer pairs",
                                        "items": {
                                            "example": {
                                                "question": "Tell me something about yourself.",
                                                "answer": "I am an Computer Engineer with curiosity to explore tech"
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sucessfull insertion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Questionnaire Answers Submitted Successfully"
                                        },
                                        "data": {
                                            "description": "Empty array",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/stages": {
            "get": {
                "tags": [
                    "Stage"
                ],
                "summary": "Get list of stages.",
                "description": "Returns list of stages.",
                "operationId": "getAllStagesData",
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Data retrived successfully."
                                        },
                                        "data": {
                                            "description": "Array of data of all stages",
                                            "properties": {
                                                "stages": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Stage"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stage"
                ],
                "summary": "Adds new stage data",
                "description": "Add a new stage data",
                "operationId": "addStageData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "$ref": "#/components/schemas/Stage/properties/name"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/Stage/properties/type"
                                    },
                                    "metadata": {
                                        "$ref": "#/components/schemas/Stage/properties/metadata"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Stage created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows status of operation",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows message for operation status ",
                                            "type": "string",
                                            "default": "Stage created successfully."
                                        },
                                        "data": {
                                            "description": "Array of data for requested stage",
                                            "properties": {
                                                "stage": {
                                                    "$ref": "#/components/schemas/Stage"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/stages/{stage}": {
            "get": {
                "tags": [
                    "Stage"
                ],
                "summary": "Get a stage data using key",
                "description": "returns stage data",
                "operationId": "getStageData",
                "parameters": [
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "Stage key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stage retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of operation",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Message for status of operation",
                                            "default": "Stage retrieved successfully."
                                        },
                                        "data": {
                                            "description": "Array of data for requested stage",
                                            "properties": {
                                                "stage": {
                                                    "$ref": "#/components/schemas/Stage"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Stage"
                ],
                "summary": "Updates existing stage record",
                "description": "Updates existing stage record and returns updated stage data",
                "operationId": "updateStageRecord",
                "parameters": [
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "Key of Stage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "$ref": "#/components/schemas/Stage/properties/name"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/Stage/properties/type"
                                    },
                                    "metadata": {
                                        "$ref": "#/components/schemas/Stage/properties/metadata"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stage updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows status of operation",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows message for operation status ",
                                            "type": "string",
                                            "default": "Stage updated successfully."
                                        },
                                        "data": {
                                            "description": "Array of data for requested stage",
                                            "properties": {
                                                "stage": {
                                                    "$ref": "#/components/schemas/Stage"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stage"
                ],
                "summary": "Deletes existing stage record",
                "description": "Deletes existing stage record and returns nothing",
                "operationId": "deleteStageRecord",
                "parameters": [
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "Key of Stage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stage deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Status of operation",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Message for status of operation",
                                            "default": "Stage deleted successfully."
                                        },
                                        "data": {
                                            "description": "Array of data for requested stage",
                                            "properties": {
                                                "stage": {
                                                    "$ref": "#/components/schemas/Stage"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getListOfUsers",
                "responses": {
                    "200": {
                        "description": "Successfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "description": "Array of data of all Users",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/candidacies": {
            "get": {
                "tags": [
                    "AdminCandidacy"
                ],
                "summary": "Get list of candidacies.",
                "description": "Returns list of candidacies.",
                "operationId": "getAllCandidaciesData",
                "parameters": [
                    {
                        "name": "final_status",
                        "in": "path",
                        "description": "final_status of candidacy",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "active"
                        }
                    },
                    {
                        "name": "candidate_name",
                        "in": "path",
                        "description": "name of candidate",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Rajiv Gandhi"
                        }
                    },
                    {
                        "name": "position",
                        "in": "path",
                        "description": "position of role",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Software Engineer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Candidacies retreived successfully"
                                        },
                                        "data": {
                                            "description": "Array of data of all candidacies",
                                            "properties": {
                                                "candidacies": {
                                                    "description": "get list of all candidacie",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Candidacy"
                                                    }
                                                },
                                                "meta": {
                                                    "$ref": "#/components/schemas/paginationMeta"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/candidacies/{candidacy}": {
            "get": {
                "tags": [
                    "AdminCandidacy"
                ],
                "summary": "Get data of one candidacy.",
                "description": "Returns one candidacy.",
                "operationId": "getOneCandidacyData",
                "parameters": [
                    {
                        "name": "candidacy",
                        "in": "path",
                        "description": "Candidacy key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Candidacy retreived successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Candidacy"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/candidacies/{candidacy}/assignStage/{stage}": {
            "post": {
                "tags": [
                    "AdminStageAssignment"
                ],
                "summary": "Assigns stage to candidacy",
                "description": "Returns success response",
                "operationId": "assignStageToCandidacy",
                "parameters": [
                    {
                        "name": "candidacy",
                        "in": "path",
                        "description": "Key of Candidacy",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "Key of Stage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "metadata": {
                                        "$ref": "#/components/schemas/CandidacyHistory/properties/metadata"
                                    },
                                    "assignee_key": {
                                        "description": "User key to access assignee",
                                        "example": "iNxu64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sucessfull Creation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Record created successfully."
                                        },
                                        "data": {
                                            "description": "Assign stage to a candidacy\n\nin response, candidacy_key and assignee_key will be given,\nwe have to get candidate_id and assignee from here",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/candidacies/{candidacy}/close": {
            "post": {
                "tags": [
                    "AdminCandidacy"
                ],
                "summary": "Close one candidacy.",
                "description": "Returns key of closed candidacy",
                "operationId": "closeAnActiveCandidacy",
                "parameters": [
                    {
                        "name": "candidacy",
                        "in": "path",
                        "description": "Candidacy key",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "JTA7NnlG0GO68Tki"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "candidacy_closing_reason": {
                                        "description": "API for closing candidacy",
                                        "type": "string",
                                        "example": "Was not available for continous 4 days"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Candidacy closed successfully"
                                        },
                                        "data": {
                                            "description": "Key of closed candidacy",
                                            "properties": {
                                                "candidacy_key": {
                                                    "$ref": "#/components/schemas/Candidacy/properties/key"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/candidacies/{candidacy}/closeStage": {
            "post": {
                "tags": [
                    "AdminStageAssignment"
                ],
                "summary": "Closes stage of candidacy",
                "description": "Returns success response if stage closed",
                "operationId": "closeStageOfCandidacy",
                "parameters": [
                    {
                        "name": "candidacy",
                        "in": "path",
                        "description": "Key of Candidacy",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stage_name": {
                                        "$ref": "#/components/schemas/CandidacyHistory/properties/stage_name"
                                    },
                                    "stage_closing_reason": {
                                        "description": "API for closing stage",
                                        "type": "string",
                                        "example": "Completed the stage"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Closing Successfull",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Stage closed successfully."
                                        },
                                        "data": {
                                            "description": "API for closing stage",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/candidacy_histories/{candidacy}": {
            "get": {
                "tags": [
                    "AdminCandidacyHistory"
                ],
                "summary": "Get All histories data of a candidacy",
                "description": "Returns all history data of a candidacy",
                "operationId": "getListOfHistoriesForACandidacy",
                "parameters": [
                    {
                        "name": "candidacy",
                        "in": "path",
                        "description": "Candidacy key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfull Retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Shows operation status",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "description": "Shows operation message",
                                            "type": "string",
                                            "default": "Histories retrieved successfully"
                                        },
                                        "data": {
                                            "description": "Array of data of Histories",
                                            "properties": {
                                                "histories": {
                                                    "description": "Get histories of a candidacy",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/key"
                                                            },
                                                            "actor": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/actor"
                                                            },
                                                            "stage_name": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/stage_name"
                                                            },
                                                            "status": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/status"
                                                            },
                                                            "metadata": {
                                                                "description": "Get histories of a candidacy",
                                                                "type": "object",
                                                                "example": {
                                                                    "duration": "2hour",
                                                                    "interviewDate": "2021-03-24"
                                                                }
                                                            },
                                                            "created_at": {
                                                                "$ref": "#/components/schemas/CandidacyHistory/properties/created_at"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "Server side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "description": "Client side error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/response5xx"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get list of projects",
                "description": "Returns list of projects",
                "operationId": "getProjectsList",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get project information",
                "description": "Returns project data",
                "operationId": "getProjectById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2_security_example": [
                            "write:projects",
                            "read:projects"
                        ]
                    }
                ]
            }
        },
        "/users": {
            "post": {
                "summary": "Adds a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "id": 10,
                                    "name": "Jessica Smith"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "tags": [
                    "Health Checks"
                ],
                "summary": "Get Health Checks",
                "description": "Returns health check status.",
                "operationId": "get/healthz",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "db": {
                                            "title": "Database health",
                                            "description": "Database health",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "cache": {
                                            "title": "Cache health",
                                            "description": "Cache health",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "aws-sqs-default": {
                                            "title": "Aws sqs health",
                                            "description": "Aws sqs health",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "servers": [
                    {
                        "url": "http://laravel-project-template.test",
                        "description": "Production Server"
                    },
                    {
                        "url": "http://laravel-project-template.test",
                        "description": "Production Server"
                    }
                ]
            }
        },
        "/healthz/api": {
            "get": {
                "tags": [
                    "Health Checks"
                ],
                "summary": "Get Health Checks Api",
                "description": "Returns health check api status.",
                "operationId": "get/healthz-api",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "title": "Api health",
                                            "description": "Api health",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "servers": [
                    {
                        "url": "http://laravel-project-template.test",
                        "description": "Production Server"
                    },
                    {
                        "url": "http://laravel-project-template.test",
                        "description": "Production Server"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CandidacyHistory": {
                "title": "CandidacyHistory",
                "description": "Schema of CandidacyHistory model",
                "properties": {
                    "id": {
                        "description": "history id to access it",
                        "type": "integer",
                        "example": 12
                    },
                    "key": {
                        "description": "history key to access it",
                        "type": "string",
                        "example": "UzMOt5LIEvzkfFSh"
                    },
                    "candidacy_id": {
                        "description": "candidacy id for foreign key",
                        "type": "integer",
                        "example": 21
                    },
                    "stage_name": {
                        "description": "stage name",
                        "type": "string",
                        "example": "Pair Programming"
                    },
                    "status": {
                        "description": "status of stage",
                        "type": "string",
                        "example": "created"
                    },
                    "actor": {
                        "description": "actor/user name",
                        "type": "string",
                        "example": 11
                    },
                    "metadata": {
                        "description": "metadata related to history entry",
                        "type": "object",
                        "example": {
                            "key1": "data1",
                            "key2": "data2",
                            "key3": "data3"
                        }
                    },
                    "created_at": {
                        "description": "Date Time of creation of record",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-04-05T11:46:58+00:00"
                    }
                },
                "type": "object"
            },
            "response4xx": {
                "description": "Response for 4xx type of errors",
                "properties": {
                    "success": {
                        "description": "Shows status of operation",
                        "type": "boolean",
                        "default": false
                    },
                    "message": {
                        "description": "Error message to be shown to user",
                        "type": "string",
                        "example": "Record not found."
                    },
                    "error": {
                        "description": "Full error for debugging",
                        "example": {
                            "key1": "data1",
                            "key2": "data2"
                        }
                    }
                },
                "type": "object"
            },
            "response5xx": {
                "description": "Response for 5xx type of errors",
                "properties": {
                    "success": {
                        "description": "Shows status of operation",
                        "type": "boolean",
                        "default": false
                    },
                    "message": {
                        "description": "Error message to be shown to user",
                        "type": "string",
                        "example": "Database error."
                    },
                    "error": {
                        "description": "Full error for debugging",
                        "example": {
                            "key1": "data1",
                            "key2": "data2"
                        }
                    }
                },
                "type": "object"
            },
            "Candidacy": {
                "title": "Candidacy",
                "description": "Schema of candidacy response",
                "properties": {
                    "key": {
                        "description": "candidacy key to access it",
                        "type": "string",
                        "example": "UzMOt5LIEvzkfFSh"
                    },
                    "candidate": {
                        "$ref": "#/components/schemas/Candidate"
                    },
                    "position": {
                        "description": "Position for which candidate applied",
                        "type": "string",
                        "example": "Software Developer"
                    },
                    "final_status": {
                        "description": "Final status of candidacy",
                        "type": "string",
                        "example": "inactive"
                    },
                    "metadata": {
                        "description": "Metadata related to candidacy",
                        "properties": {
                            "stages": {
                                "description": "Metadata related to status of stages",
                                "type": "array",
                                "items": {},
                                "example": "{ stageName1:{latest data here}, stageName2:{latest data here} }"
                            },
                            "feedbacks": {
                                "description": "Metadata related to feedbacks",
                                "type": "array",
                                "items": {},
                                "example": "{ feedback_id: 1, verdict: May be, Actor: actor3 },{ feedback_id: 2, verdict: Yes, Actor: actor2 },{ feedback_id: 3, verdict: Yes, Actor: actor3 }"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "description": "Date of creation of candidacy",
                        "type": "string",
                        "format": "date",
                        "example": "2021-03-05T08:57:11+00:00"
                    }
                },
                "type": "object"
            },
            "paginationMeta": {
                "title": "Pagination Meta",
                "description": "Schema of Meta array of pagination ",
                "properties": {
                    "current_page": {
                        "description": "current page number",
                        "type": "integer",
                        "example": 1
                    },
                    "first_page_url": {
                        "description": "url of first page",
                        "type": "string",
                        "example": "http://localhost/api/v1/candidacies?&page=1"
                    },
                    "from": {
                        "description": "first record in current page",
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "description": "last page number",
                        "type": "integer",
                        "example": 9
                    },
                    "last_page_url": {
                        "description": "last page url",
                        "type": "string",
                        "example": "http://localhost/api/v1/candidacies?&page=9"
                    },
                    "next_page_url": {
                        "description": "url of next page",
                        "type": "string",
                        "example": "http://localhost/api/v1/candidacies?&page=2"
                    },
                    "path": {
                        "description": "path of query",
                        "type": "string",
                        "example": "http://localhost/api/v1/candidacies?"
                    },
                    "per_page": {
                        "description": "number of records per page",
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "description": "url of previous page",
                        "type": "string",
                        "example": "http://localhost/api/v1/candidacies?&page=9"
                    },
                    "to": {
                        "description": "last record in the page",
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "description": "total records of all pages",
                        "type": "integer",
                        "example": 152
                    }
                },
                "type": "object"
            },
            "Candidate": {
                "title": "Candidate",
                "description": "Response structure for Candidate",
                "properties": {
                    "key": {
                        "description": "Key of Candidate",
                        "type": "string",
                        "example": "dsfJJJDSjSdjfs"
                    },
                    "name": {
                        "description": "Name of Candidate",
                        "type": "string",
                        "example": "Hallie Pfeffer"
                    },
                    "email": {
                        "description": "Email of candidate",
                        "type": "string",
                        "example": "student@gmail.com"
                    },
                    "metadata": {
                        "description": "Metadata of candidate",
                        "properties": {
                            "contact": {
                                "description": "Contact no of candidate",
                                "type": "string",
                                "example": "+1 345 321 2311"
                            },
                            "education": {
                                "description": "Education of candidate",
                                "type": "string",
                                "example": "BE CE"
                            },
                            "college": {
                                "description": "College of last education",
                                "type": "string",
                                "example": "IIT Kankot"
                            },
                            "experience": {
                                "description": "College of last education",
                                "type": "integer",
                                "example": 12
                            },
                            "last_company": {
                                "description": "Last company",
                                "type": "string",
                                "example": "Google"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Candidate"
                }
            },
            "CodingChallengeDetailed": {
                "title": "CodingChallengeDetailed",
                "description": "Schema of coding challenge response",
                "properties": {
                    "key": {
                        "description": "coding challenge id",
                        "type": "string",
                        "example": "JgQ4K9qw8usvj4i9"
                    },
                    "title": {
                        "description": "coding challenge title",
                        "type": "string",
                        "example": "Two number sum"
                    },
                    "description": {
                        "description": "coding challenge description",
                        "type": "string",
                        "example": "Write a program that example.."
                    },
                    "tests": {
                        "description": "coding challenge testcases",
                        "example": "[{inputs: \"5, 3\", output: \"8\"}, {inputs: \"0, 2\", output: \"2\"}]"
                    }
                },
                "type": "object"
            },
            "CodingChallengeSchema": {
                "title": "CodingChallengeSchema",
                "description": "Schema of coding challenge response",
                "properties": {
                    "key": {
                        "description": "coding challenge id",
                        "type": "string",
                        "example": "JgQ4K9qw8usvj4i9"
                    },
                    "title": {
                        "description": "coding challenge title",
                        "type": "string",
                        "example": "Two number sum"
                    },
                    "description": {
                        "description": "coding challenge description",
                        "type": "string",
                        "example": "Write a program that example.."
                    }
                },
                "type": "object"
            },
            "Feedback": {
                "title": "RequestBody",
                "description": "Feedback request body data",
                "required": [
                    "feedback",
                    "description",
                    "user_id"
                ],
                "properties": {
                    "key": {
                        "description": "Key",
                        "type": "string",
                        "example": "hj!*k43j4h3j"
                    },
                    "verdict": {
                        "description": "verdict",
                        "type": "string",
                        "example": "Yes"
                    },
                    "description": {
                        "description": "description about given feedback",
                        "type": "string",
                        "example": "have good practical knowledge"
                    },
                    "user_id": {
                        "description": "id of evalutor",
                        "type": "integer",
                        "example": "hjkj!%^$^%bb"
                    },
                    "candidacy_id": {
                        "description": "candidacy_id",
                        "type": "integer",
                        "example": "hjghj!&^*JBNBJ"
                    }
                },
                "type": "object"
            },
            "Questionnaire": {
                "title": "Questionnaire",
                "description": "Schema of Questionnaire response",
                "properties": {
                    "key": {
                        "description": "questionnaire key to access it",
                        "type": "string",
                        "example": "UzMOt5LIEvzkfFSh"
                    },
                    "name": {
                        "description": "Name of questionnaire",
                        "type": "string",
                        "example": "Software Developer Questionnaire"
                    },
                    "metadata": {
                        "description": "Metadata related to questionnaire",
                        "example": {
                            "url": "https://form1.com/d/s/formXYZ"
                        }
                    }
                },
                "type": "object"
            },
            "QuestionnaireSubmission": {
                "title": "QuestionnaireSubmission",
                "description": "Schema of QuestionnaireSubmission response",
                "properties": {
                    "key": {
                        "description": "QuestionnaireSubmission key to access it",
                        "type": "string",
                        "example": "UzMOt5LIEvzkfFSh"
                    },
                    "questionnaire_id": {
                        "description": "questionnaire id foreign key",
                        "type": "integer",
                        "example": 12
                    },
                    "candidacy_id": {
                        "description": "candidacy id foreign key",
                        "type": "integer",
                        "example": 134
                    },
                    "metadata": {
                        "description": "metadata having questions and answers",
                        "type": "json",
                        "example": [
                            {
                                "answer": "I am a computer engineer who likes to explore new innovations and technologies in IT world.",
                                "question": "Tell us something about yourself."
                            },
                            {
                                "answer": "I was lost in forest in a tour at my school times. I shouted and my friends found me.",
                                "question": "What is the biggest problem have you faced in your life?  and how did you overcome it?"
                            },
                            {
                                "answer": "I can learn fast.",
                                "question": "What are your strengths?"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "Stage": {
                "title": "Stage",
                "description": "Schema of Stage response",
                "properties": {
                    "key": {
                        "description": "stage key to access it",
                        "type": "string",
                        "example": "UzMOt5LIEvzkfFSh"
                    },
                    "name": {
                        "description": "Name of stage",
                        "type": "string",
                        "example": "HR Interview"
                    },
                    "type": {
                        "description": "Type of stage",
                        "type": "string",
                        "example": "interview"
                    },
                    "metadata": {
                        "description": "Metadata related to stage",
                        "example": {
                            "key1": "value1",
                            "key2": "value2"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Schema",
                "description": "Schema of User Response",
                "properties": {
                    "key": {
                        "description": "User key to access it",
                        "type": "string",
                        "example": "RLvAbH"
                    },
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "example": "Allen Walsh"
                    },
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "example": "werdman@example.org"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "4XX": {
                "description": "Client side error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/response4xx"
                        }
                    }
                }
            },
            "5XX": {
                "description": "Server side error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/response5xx"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Header": {
                "type": "apiKey",
                "description": "This API uses TOKEN KEY authentication\n\nKey MUST be provided for each request that requires authentication.",
                "name": "apikey",
                "in": "header",
                "scheme": "https"
            },
            "Token": {
                "type": "apiKey",
                "description": "This API uses **TOKEN KEY** authentication\n\nKey `MUST` be provided for each request that requires authentication.",
                "name": "apikey",
                "in": "query",
                "scheme": "https"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about improwised",
        "url": "https://www.improwised.com/"
    }
}